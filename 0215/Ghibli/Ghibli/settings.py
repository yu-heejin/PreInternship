"""
Django settings for Ghibli project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-t12u-(cb=05i3q(0o)%==fc3w3rsv^2#7_e-8cb7-0uma_q4k9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# * 호스트 모두 허용 근데 에러나서 지움
ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    's3check',
    's3api',
    # 's3db',
    'storages',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
import os

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# S3) 만들고 여기에 이미지 저장할 폴더
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 미디어 파일을 위한 저장소 설정
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# 필요한지 확실하지 않음 ; http 사용 여부 = false
AWS_S3_SECURE_URLS = False       # use http instead of https
# 필요한지 확실하지 않음 ; 요청에 대한 복잡한 인증 관련 쿼리 매개 변수 허용 여부 = false
AWS_QUERYSTRING_AUTH = False     # don't add complex authentication-related query parameters for requests

# AWS_S3 정보 : KEY는 필요하시면 말씀해주세요! github에 올리니까 경고메일이 자꾸 와서 지웠습니다..
AWS_S3_ACCESS_KEY_ID = 'AKIAUAMQWAYE3VAYCUXP'
AWS_S3_SECRET_ACCESS_KEY = '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'
AWS_REGION = 'ap-northeast-2'

# S3 storages
AWS_STORAGE_BUCKET_NAME = 'bucket-timmy'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.%s.amazonaws.com' % (AWS_STORAGE_BUCKET_NAME,AWS_REGION)
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}

# 동일 파일 이름이면 덮어쓰지 말고 파일 이름_~~으로 만듦
AWS_S3_FILE_OVERWRITE = False
# 캐쉬 사용
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}

AWS_DEFAULT_ACL = None

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Ghibli.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Ghibli.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


DATABASES = {
        'default': {
            'ENGINE': 'djongo',
            # 연습용
            'NAME': 'dmongo',
            # 실제 사용 DB
            # 'NAME' : 'myFirstDatabase'
            'ENFORCE_SCHEMA': False,
            'CLIENT': {
                'host': 'mongodb+srv://timmy:tjdskacjdsus@cluster0.pszbu.mongodb.net/myFirstDatabase?retryWrites=true&w=majority'
            }  
        }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
